<?php

/**
 * BaseProducto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $nota_venta_id
 * @property string $foto
 * @property string $codigo
 * @property string $nombre
 * @property string $modelo
 * @property string $marca
 * @property string $detalle
 * @property integer $costo
 * @property integer $clasificacion_id
 * @property integer $sub_clasificacion_id
 * @property Doctrine_Collection $Item
 * @property Doctrine_Collection $NotaVenta
 * @property Clasificacion $Clasificacion
 * @property SubClasificacion $SubClasificacion
 * 
 * @method integer             getNotaVentaId()          Returns the current record's "nota_venta_id" value
 * @method string              getFoto()                 Returns the current record's "foto" value
 * @method string              getCodigo()               Returns the current record's "codigo" value
 * @method string              getNombre()               Returns the current record's "nombre" value
 * @method string              getModelo()               Returns the current record's "modelo" value
 * @method string              getMarca()                Returns the current record's "marca" value
 * @method string              getDetalle()              Returns the current record's "detalle" value
 * @method integer             getCosto()                Returns the current record's "costo" value
 * @method integer             getClasificacionId()      Returns the current record's "clasificacion_id" value
 * @method integer             getSubClasificacionId()   Returns the current record's "sub_clasificacion_id" value
 * @method Doctrine_Collection getItem()                 Returns the current record's "Item" collection
 * @method Doctrine_Collection getNotaVenta()            Returns the current record's "NotaVenta" collection
 * @method Clasificacion       getClasificacion()        Returns the current record's "Clasificacion" value
 * @method SubClasificacion    getSubClasificacion()     Returns the current record's "SubClasificacion" value
 * @method Producto            setNotaVentaId()          Sets the current record's "nota_venta_id" value
 * @method Producto            setFoto()                 Sets the current record's "foto" value
 * @method Producto            setCodigo()               Sets the current record's "codigo" value
 * @method Producto            setNombre()               Sets the current record's "nombre" value
 * @method Producto            setModelo()               Sets the current record's "modelo" value
 * @method Producto            setMarca()                Sets the current record's "marca" value
 * @method Producto            setDetalle()              Sets the current record's "detalle" value
 * @method Producto            setCosto()                Sets the current record's "costo" value
 * @method Producto            setClasificacionId()      Sets the current record's "clasificacion_id" value
 * @method Producto            setSubClasificacionId()   Sets the current record's "sub_clasificacion_id" value
 * @method Producto            setItem()                 Sets the current record's "Item" collection
 * @method Producto            setNotaVenta()            Sets the current record's "NotaVenta" collection
 * @method Producto            setClasificacion()        Sets the current record's "Clasificacion" value
 * @method Producto            setSubClasificacion()     Sets the current record's "SubClasificacion" value
 * 
 * @package    takeoff
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProducto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('producto');
        $this->hasColumn('nota_venta_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('foto', 'string', 150, array(
             'type' => 'string',
             'length' => 150,
             ));
        $this->hasColumn('codigo', 'string', 15, array(
             'type' => 'string',
             'length' => 15,
             ));
        $this->hasColumn('nombre', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 250,
             ));
        $this->hasColumn('modelo', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('marca', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('detalle', 'string', 350, array(
             'type' => 'string',
             'length' => 350,
             ));
        $this->hasColumn('costo', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('clasificacion_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('sub_clasificacion_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Item', array(
             'local' => 'id',
             'foreign' => 'producto_id'));

        $this->hasMany('NotaVenta', array(
             'local' => 'nota_venta_id',
             'foreign' => 'id'));

        $this->hasOne('Clasificacion', array(
             'local' => 'clasificacion_id',
             'foreign' => 'id'));

        $this->hasOne('SubClasificacion', array(
             'local' => 'sub_clasificacion_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $signable0 = new Doctrine_Template_Signable(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($signable0);
    }
}